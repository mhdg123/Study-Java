 Enhanced for (향상된 for) 문
   for(배열타입 변수 : 배열이름) {...}

int[] arr = {11,22,33,44,55}
for(int x : arr){ System.out.print(x + " "); }
arr을 받을 변수로 x를 선언하면 기존의 for문처럼 반복문이 되어서 나옴

for(var x: arr) 하게 되면 arr타입이 기억나지 않을 때 var타입은 어떤 타입이든 받을 수 있음

 java.util.Arrays 클래스
   배열을 다루는 유용한 메소드들 제공
        Arrays.toString(): 문자열 형태로 리턴
        Arrays.copyOf(원본배열, 복사할 Length)
        Arrays.copyOfRange(원본배열, from, to)
        Arrays.fill() : 배열에 특정 값으로 채우기
        Arrays.sort(원본배열): 오름차순 변경
        Arrays.asList(): array ->List로 

  메소드 (Method):
 		반복되는 코드, 내용, 재사용해야할 코드들을 한 뭉치로 묶어서
 		따로 메소드로 만들은 다음(정의) 이를 필요할때마다 사용(호출)한다.

 		※ 자바는 '함수(function)' 가 따로 없습니다
 		  그러나 교육하면서 편의상, 혼용하여 말하겠습니다.

	 메소드 정의:
	 	메소드는 main 메소드 바깥에서!!, class 안에서 정의!!

	 메소드 정의구문:
		수식어      리턴타입    메소드이름  (매개변수, ...) { ... 메소드 본체(body) }
	    modifier return_type  method_name(parameter, ...) { ... }

		수식어(modifier) : public, static, private, ... (생략 가능)

		매개변수 (parameter) : 메소드 호출시 넘겨주는 값.

		리턴타입 (return type) : 메소드 종료후 호출한 쪽에 돌려주는 값
			void, int, double, String ...
			(리턴타입 void의 의미는 되돌려주는 값(return 값)이 없다는 의미)

	메소드 signature 란?:
		메소드 이름 + 매개변수 리스트 (매개변수 타입, 순서, 개수)
			sayAge(int)
			sayHello3(String, int)

  return의 의미
 
  1. 메소드를 호출한 곳으로 값을 리턴한다
  2. 메소드 종료
  3. 메소드 정의시 명시한 리턴타입의 값이 '반드시' 리턴되어야 한다
        (혹은 리턴타입으로 형변환 가능한 값이)
